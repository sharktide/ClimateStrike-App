name: Build For Apple Platforms

on:
  workflow_dispatch:
      inputs:
        target:
          description: 'Choose platform to build'
          required: true
          default: 'macc'
          type: choice
          options:
            - ios
            - macc

jobs:
  build-macc:
    if: ${{ github.event.inputs.target == 'macc' }}
    runs-on: macos-latest
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Setup XCode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '26'
  
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'
  
      - name: Install MAUI workload
        run: dotnet workload install maui
  
      - name: Import signing certificates
        env:
          DEV_APP_CERT_P12: ${{ secrets.APPLE_APP_CERT_BASE64 }}
          DEV_APP_CERT_PASSWORD: ${{ secrets.APPLE_APP_CERT_PASSWORD }}
          DEV_INSTALLER_CERT_P12: ${{ secrets.APPLE_INSTALLER_CERT_BASE64 }}
          DEV_INSTALLER_CERT_PASSWORD: ${{ secrets.APPLE_INSTALLER_CERT_PASSWORD }}
        run: |
          # Create a temporary keychain
          KEYCHAIN_PATH="$RUNNER_TEMP/build.keychain-db"
          KEYCHAIN_PASSWORD=$(uuidgen)
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security set-keychain-settings "$KEYCHAIN_PATH"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
  
          echo "$DEV_APP_CERT_P12" | base64 --decode > app_cert.p12
          echo "$DEV_INSTALLER_CERT_P12" | base64 --decode > installer_cert.p12
  
          security import app_cert.p12 -k "$KEYCHAIN_PATH" -P "$DEV_APP_CERT_PASSWORD" -T /usr/bin/codesign
          security import installer_cert.p12 -k "$KEYCHAIN_PATH" -P "$DEV_INSTALLER_CERT_PASSWORD" -T /usr/bin/productsign
  
          security list-keychains -s "$KEYCHAIN_PATH"
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
  
      - name: Build Mac Catalyst App
        run: |
          dotnet publish STRIKE/StrikeAI.csproj \
            -f net9.0-maccatalyst -c Release \
            -p:ArchiveOnBuild=true \
            -p:EnableCodeSigning=true \
            -p:EnablePackageSigning=true \
            -p:CodesignKey="Developer ID Application: Navita Meher (5WY7FLX467)" \
            -p:PackageSigningKey="Developer ID Installer: Navita Meher (5WY7FLX467)" \
            -p:CodesignEntitlements="Platforms/MacCatalyst/Entitlements.plist"
  
      - name: Notarize .pkg
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.TEAM_ID }}
        run: |
          PKG_PATH=$(find STRIKE/bin/Release/net9.0-maccatalyst/publish -name "*.pkg" | head -n 1)
          echo "Notarizing $PKG_PATH ..."
          xcrun notarytool submit "$PKG_PATH" \
            --apple-id "$APPLE_ID" \
            --password "$APPLE_APP_SPECIFIC_PASSWORD" \
            --team-id "$APPLE_TEAM_ID" \
            --wait
  
          echo "Stapling notarization ticket..."
          xcrun stapler staple "$PKG_PATH"
  
      - name: Upload notarized package
        uses: actions/upload-artifact@v4
        with:
          name: StrikeAI-PKG
          path: STRIKE/bin/Release/net9.0-maccatalyst/publish/**/*.pkg

  build-ios:
    if: ${{ github.event.inputs.target == 'ios' }}
    runs-on: macos-15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup XCode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 26.0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Install MAUI workload
        run: dotnet workload install maui

      - name: Build IPA
        run: dotnet publish -v d STRIKE/StrikeAI.csproj -f net9.0-ios -c Release -p:ArchiveOnBuild=true -p:EnableCodeSigning=false

      - name: Upload IPA Artifact
        uses: actions/upload-artifact@v4
        with:
          name: StrikeAI-iOS-IPA
          path: STRIKE/bin/Release/net9.0-ios/ios-arm64/publish/**
